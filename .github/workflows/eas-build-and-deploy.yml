name: Build and deploy

on:
  workflow_dispatch:
    inputs:
      platform:
        required: true
        type: choice
        description: Platform to build for
        options:
          - all
          - android
          - ios
      profile:
        required: true
        type: choice
        description: Build profile to use
        options:
          - staging
          - production
      deploy:
        required: true
        description: Deploy to testflight or playstore
        type: boolean

jobs:
  build:
    name: Install and build
    runs-on: ubuntu-latest
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets."
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Copy Google Services file from secrets
        run: echo ${{ secrets.GOOGLE_SERVICES_ANDROID_BASE64 }} | base64 --decode > ./google-services.json

      - name: Yarn install
        uses: ./.github/actions/yarn-install

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Build on EAS
        run: |
          eas build \
            --non-interactive \
            --platform=${{ inputs.platform }} \
            --profile=${{ inputs.profile }}

      - name: Get version from manifest
        if: ${{ github.ref == 'refs/heads/production' && inputs.profile == 'production' }}
        id: version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: "app.json"
          prop_path: "expo.version"

      - name: Config Github Bot for tagging
        if: ${{ github.ref == 'refs/heads/production' && inputs.profile == 'production' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin

      - name: Tag on master
        if: ${{ github.ref == 'refs/heads/production' && inputs.profile == 'production' }}
        continue-on-error: true
        run: |
          git checkout master
          git tag "v${{steps.version.outputs.prop}}"
          git push origin --tags

      - name: Tag on production
        if: ${{ github.ref == 'refs/heads/production' && inputs.profile == 'production' }}
        continue-on-error: true
        run: |
          git checkout production
          git tag "v${{steps.version.outputs.prop}}"
          git push origin --tags

  deploy:
    name: Deploy
    if: ${{ inputs.deploy }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets."
            exit 1
          fi

      - name: Check for Apple Credentials
        if: ${{ inputs.platform == 'ios' || inputs.platform == 'all' }}
        run: |
          if [ -z "${{ secrets.EXPO_APPLE_APP_SPECIFIC_PASSWORD }}" ] || [ -z "${{ secrets.EXPO_APPLE_ID }}" ]; then
            echo "You must provide an EXPO_APPLE_APP_SPECIFIC_PASSWORD and EXPO_APPLE_ID to deploy to testflight"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Yarn install
        uses: ./.github/actions/yarn-install

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Submit to testflight
        if: ${{ inputs.platform == 'ios' || inputs.platform == 'all' }}
        run: |
          EXPO_APPLE_APP_SPECIFIC_PASSWORD=${{ secrets.EXPO_APPLE_APP_SPECIFIC_PASSWORD }} \
          EXPO_APPLE_ID=${{ secrets.EXPO_APPLE_ID }} \
          eas submit \
            --latest \
            --non-interactive \
            -p ios

      - name: Submit to playstore
        if: ${{ inputs.platform == 'android' || inputs.platform == 'all' }}
        run: |
          eas submit \
            --latest \
            --non-interactive \
            -p android

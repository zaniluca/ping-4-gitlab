name: Build and deploy
on:
  push:
    branches:
      - production
  workflow_dispatch:

jobs:
  build:
    name: Install and build
    runs-on: ubuntu-latest
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Copy Google Services files from secrets
        run: echo ${{ secrets.GOOGLE_SERVICES_ANDROID_BASE64 }} | base64 --decode > ./google-services.json && echo ${{ secrets.GOOGLE_SERVICES_IOS_BASE64 }} | base64 --decode > ./GoogleService-Info.plist

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: yarn

      - name: Setup Expo
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Find yarn cache
        id: yarn-cache-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build on EAS
        run: npx eas-cli build --platform all --non-interactive

      - name: Bump build on master
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore: bumped build numbers"
          commit_options: "--no-verify"
          branch: master

      # - name: Parse app.json
      #   id: set_var
      #   run: |
      #     content=`cat ./app.json`
      #     # the following lines are only required for multi line json
      #     content="${content//'%'/'%25'}"
      #     content="${content//$'\n'/'%0A'}"
      #     content="${content//$'\r'/'%0D'}"
      #     # end of optional handling for multi line json
      #     echo "::set-output name=appJson::$content"

      # - name: Print Tag
      #   run: |
      #     echo "${{fromJson(steps.set_var.outputs.appJson).version}}"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Check for EXPO_APPLE_APP_SPECIFIC_PASSWORD
        run: |
          if [ -z "${{ secrets.EXPO_APPLE_APP_SPECIFIC_PASSWORD }}" ]; then
            echo "You must provide an EXPO_APPLE_APP_SPECIFIC_PASSWORD to deploy to testflight"
          fi

      - name: Check for EXPO_APPLE_ID
        run: |
          if [ -z "${{ secrets.EXPO_APPLE_ID }}" ]; then
            echo "You must provide an EXPO_APPLE_ID to deploy to testflight"
          fi

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: yarn

      - name: Setup Expo
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Find yarn cache
        id: yarn-cache-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Submit to testflight
        run: EXPO_APPLE_APP_SPECIFIC_PASSWORD=${{ secrets.EXPO_APPLE_APP_SPECIFIC_PASSWORD }} EXPO_APPLE_ID=${{ secrets.EXPO_APPLE_ID }} npx eas-cli submit -p ios --latest --non-interactive

      - name: Submit to playstore
        run: npx eas-cli submit -p android --latest --non-interactive

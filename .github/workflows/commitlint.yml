name: Commitlint
on:
  pull_request:
    branches:
      - master

jobs:
  run-commitlint-on-pr:
    name: "Lint Commits"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: yarn

      - name: Find yarn cache
        id: yarn-cache-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Validate all commits from PR
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: Parse app.json
        id: parse_manifest
        run: |
          content=`cat ./app.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=manifest::$content"

      - name: Print Tag
        run: |
          echo "${{fromJson(steps.parse_manifest.outputs.manifest).version}}"

      - name: Parse app.json 2
        id: parse_manifest_2
        run: |
          content=`cat ./app.json`
          echo "::set-output name=manifest::$content"

      - name: Print Tag 2
        run: |
          echo "${{fromJson(steps.parse_manifest_2.outputs.manifest).version}}"
